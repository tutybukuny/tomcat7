/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2016-12-05 15:38:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Model.Motor;
import java.util.ArrayList;
import Model.Borrow;

public final class return_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    ArrayList<Borrow> borrows = (ArrayList) session.getAttribute("borrows");
    ArrayList<Borrow> selectedBorrows = new ArrayList<Borrow>();

    for (int i = 0; i < borrows.size(); i++) {
        String check = request.getParameter("" + i);
        if (check != null && check.equals("on")) {
            selectedBorrows.add(borrows.get(i));
        }
    }

    session.setAttribute("selectedBorrows", selectedBorrows);

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <script>\n");
      out.write("            function cal() {\n");
      out.write("                var total = 0;\n");
      out.write("                for (var i = 0; i <");
      out.print(selectedBorrows.size());
      out.write("; i++) {\n");
      out.write("                    var start = parseFloat(document.getElementById('start' + i).innerHTML);\n");
      out.write("                    var end = parseFloat(document.getElementById('end' + i).value);\n");
      out.write("                    var price = parseFloat(document.getElementById('price' + i).innerHTML);\n");
      out.write("                    var penalty = parseFloat(document.getElementById('penalty' + i).value);\n");
      out.write("                    console.log(start + \" \" + end + \" \" + price + \" \" + penalty);\n");
      out.write("\n");
      out.write("                    var totalprice = document.getElementById('totalprice' + i);\n");
      out.write("\n");
      out.write("                    var c = (end - start) * price + penalty;\n");
      out.write("                    \n");
      out.write("                    if(end === 0) c = '';\n");
      out.write("                    \n");
      out.write("                    totalprice.innerHTML = c;\n");
      out.write("                    total += c;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                document.getElementById('totalCost').innerHTML = 'Total Cost = ' + total;\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <form method=\"POST\" action=\"doReturn.jsp\">\n");
      out.write("            <table border=\"1\" cellspacing=\"0\" cellpadding=\"10\">\n");
      out.write("                <tr>\n");
      out.write("                    <td>Id</td>\n");
      out.write("                    <td>Name</td>\n");
      out.write("                    <td>Type</td>\n");
      out.write("                    <td>Mark</td>\n");
      out.write("                    <td>Description</td>\n");
      out.write("                    <td>Start Date</td>\n");
      out.write("                    <td>End Date</td>\n");
      out.write("                    <td>Price</td>\n");
      out.write("                    <td>Penalty</td>\n");
      out.write("                    <td>Total price</td>\n");
      out.write("                </tr>\n");
      out.write("                ");

                    for (int i = 0; i < selectedBorrows.size(); i++) {
                        Borrow borrow = selectedBorrows.get(i);
                        Motor motor = selectedBorrows.get(i).getMotor();
                
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td>");
      out.print(motor.getId());
      out.write("</td>\n");
      out.write("                    <td>");
      out.print(motor.getName());
      out.write("</td>\n");
      out.write("                    <td>");
      out.print(motor.getType());
      out.write("</td>\n");
      out.write("                    <td>");
      out.print(motor.getMark());
      out.write("</td>\n");
      out.write("                    <td>");
      out.print(motor.getDescription());
      out.write("</td>\n");
      out.write("                    <td id=\"start");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(borrow.getStartDate());
      out.write("</td>\n");
      out.write("                    <td><input type=\"text\" name=\"endDate");
      out.print(i);
      out.write("\" onkeyup=\"cal()\" value=\"0\" id=\"end");
      out.print(i);
      out.write("\"/></td>\n");
      out.write("                    <td id=\"price");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(borrow.getPrice());
      out.write("</td>\n");
      out.write("                    <td><input type=\"text\" name=\"penalty");
      out.print(i);
      out.write("\" onkeyup=\"cal()\" value=\"0\" id=\"penalty");
      out.print(i);
      out.write("\"/></td>\n");
      out.write("                    <td id=\"totalprice");
      out.print(i);
      out.write("\"></td>\n");
      out.write("                </tr>\n");
      out.write("                ");

                    }
                
      out.write("\n");
      out.write("            </table>\n");
      out.write("            <h1 id=\"totalCost\">Total cost = 0</h1>\n");
      out.write("            <input type=\"submit\"/>\n");
      out.write("        </form>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
